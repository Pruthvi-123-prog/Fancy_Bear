const { WebsiteScanner } = require('./scanner/index(1)');

async function compareWithPentestTools() {
  console.log('🔍 ACCURACY COMPARISON: Our Scanner vs PentestTools');
  console.log('================================================\n');

  // PentestTools results for example.com (from Other_Test_Results.txt)
  const pentestToolsResults = {
    scanDuration: '25 sec',
    testsPerformed: '39/39',
    riskLevels: {
      critical: 0,
      high: 0,
      medium: 0,
      low: 5,
      info: 34
    },
    findings: [
      {
        issue: 'Missing security header: Strict-Transport-Security',
        severity: 'low',
        category: 'Security Misconfiguration',
        owasp: 'A5 - Security Misconfiguration',
        port: '443/tcp',
        confirmed: true
      },
      {
        issue: 'Missing security header: Content-Security-Policy',
        severity: 'low', 
        category: 'Security Misconfiguration',
        owasp: 'A5 - Security Misconfiguration',
        port: '443/tcp',
        confirmed: true
      },
      {
        issue: 'Missing security header: Referrer-Policy',
        severity: 'low',
        category: 'Security Misconfiguration',
        owasp: 'A5 - Security Misconfiguration', 
        port: '443/tcp',
        confirmed: true
      },
      {
        issue: 'Missing security header: X-Content-Type-Options',
        severity: 'low',
        category: 'Security Misconfiguration',
        owasp: 'A5 - Security Misconfiguration',
        port: '443/tcp',
        confirmed: true
      },
      {
        issue: 'Server software and technology found',
        severity: 'info',
        category: 'Information Disclosure',
        owasp: 'A5 - Security Misconfiguration',
        details: 'HTTP/3, DigiCert SSL/TLS certificate',
        confirmed: 'unconfirmed'
      },
      {
        issue: 'Security.txt file is missing',
        severity: 'info',
        category: 'Security Misconfiguration',
        owasp: 'A5 - Security Misconfiguration',
        confirmed: true
      }
    ],
    owaspCategoryCoverage: 1, // Only A5 - Security Misconfiguration
    totalFindings: 39 // 5 low + 34 info
  };

  console.log('📊 PentestTools Results Summary:');
  console.log('─'.repeat(35));
  console.log(`⏱️  Scan Duration: ${pentestToolsResults.scanDuration}`);
  console.log(`🎯 Total Findings: ${pentestToolsResults.totalFindings}`);
  console.log(`🚨 Critical: ${pentestToolsResults.riskLevels.critical}`);
  console.log(`🔴 High: ${pentestToolsResults.riskLevels.high}`);
  console.log(`🟡 Medium: ${pentestToolsResults.riskLevels.medium}`);
  console.log(`🟢 Low: ${pentestToolsResults.riskLevels.low}`);
  console.log(`ℹ️  Info: ${pentestToolsResults.riskLevels.info}`);
  console.log(`🛡️  OWASP Categories: ${pentestToolsResults.owaspCategoryCoverage}/10`);

  console.log('\n📋 PentestTools Key Findings:');
  pentestToolsResults.findings.forEach((finding, i) => {
    const icon = finding.severity === 'low' ? '🟢' : 'ℹ️';
    console.log(`${i+1}. ${icon} ${finding.issue}`);
    console.log(`   Category: ${finding.category}`);
    console.log(`   OWASP: ${finding.owasp}`);
  });

  console.log('\n' + '═'.repeat(50));
  console.log('\n🚀 Now running OUR SCANNER on the same target...\n');

  const scanner = new WebsiteScanner();
  const targetUrl = 'https://example.com';

  try {
    const startTime = Date.now();
    
    const ourResults = await scanner.runScan(targetUrl, {
      security: true,
      performance: false,
      seo: false,
      accessibility: false
    });

    const duration = Date.now() - startTime;

    // Analyze our results
    const basicIssues = ourResults.security ? ourResults.security.length : 0;
    const advancedIssues = ourResults.advancedSecurity ? ourResults.advancedSecurity.length : 0;
    const totalIssues = basicIssues + advancedIssues;

    // Count OWASP categories in our results
    const ourOwaspCategories = new Set();
    if (ourResults.advancedSecurity) {
      ourResults.advancedSecurity.forEach(finding => {
        ourOwaspCategories.add(finding.category);
      });
    }

    // Count severity levels in our results
    const ourSeverityCount = {
      critical: 0,
      high: 0,
      medium: 0,
      low: 0,
      info: 0
    };

    const allOurFindings = [
      ...(ourResults.security || []),
      ...(ourResults.advancedSecurity || [])
    ];

    allOurFindings.forEach(finding => {
      if (ourSeverityCount[finding.severity] !== undefined) {
        ourSeverityCount[finding.severity]++;
      }
    });

    console.log('📊 OUR SCANNER Results Summary:');
    console.log('─'.repeat(35));
    console.log(`⏱️  Scan Duration: ${duration}ms`);
    console.log(`🎯 Total Findings: ${totalIssues}`);
    console.log(`🚨 Critical: ${ourSeverityCount.critical}`);
    console.log(`🔴 High: ${ourSeverityCount.high}`);
    console.log(`🟡 Medium: ${ourSeverityCount.medium}`);
    console.log(`🟢 Low: ${ourSeverityCount.low}`);
    console.log(`ℹ️  Info: ${ourSeverityCount.info}`);
    console.log(`🛡️  OWASP Categories: ${ourOwaspCategories.size}/10`);

    console.log('\n📋 Our Scanner Key Findings:');
    allOurFindings.slice(0, 10).forEach((finding, i) => {
      const icon = finding.severity === 'critical' ? '🚨' :
                   finding.severity === 'high' ? '🔴' :
                   finding.severity === 'medium' ? '🟡' : '🟢';
      console.log(`${i+1}. ${icon} ${finding.issue}`);
      console.log(`   Category: ${finding.category}`);
      console.log(`   Severity: ${finding.severity}`);
    });

    console.log('\n' + '═'.repeat(50));
    console.log('\n📊 DETAILED ACCURACY COMPARISON');
    console.log('==============================\n');

    // Compare specific findings
    console.log('🔍 FINDING-BY-FINDING COMPARISON:');
    console.log('─'.repeat(40));

    const comparisonResults = {
      matchedFindings: 0,
      ourExtraFindings: 0,
      missedFindings: 0,
      accuracyPercentage: 0
    };

    // Check if we found the same security header issues
    const headerComparisons = [
      'Strict-Transport-Security',
      'Content-Security-Policy', 
      'Referrer-Policy',
      'X-Content-Type-Options'
    ];

    console.log('\n✅ SECURITY HEADERS COMPARISON:');
    headerComparisons.forEach(header => {
      const pentestFound = pentestToolsResults.findings.some(f => 
        f.issue.includes(header.replace('-', '-'))
      );
      const ourFound = allOurFindings.some(f => 
        f.issue.toLowerCase().includes(header.toLowerCase()) ||
        f.description.toLowerCase().includes(header.toLowerCase())
      );

      if (pentestFound && ourFound) {
        console.log(`   ✅ ${header}: Both found`);
        comparisonResults.matchedFindings++;
      } else if (pentestFound && !ourFound) {
        console.log(`   ❌ ${header}: PentestTools found, we missed`);
        comparisonResults.missedFindings++;
      } else if (!pentestFound && ourFound) {
        console.log(`   ➕ ${header}: We found, PentestTools missed`);
        comparisonResults.ourExtraFindings++;
      } else {
        console.log(`   ⚪ ${header}: Neither found`);
      }
    });

    // Calculate accuracy metrics
    const totalPentestFindings = pentestToolsResults.findings.length;
    const matchPercentage = Math.round(
      (comparisonResults.matchedFindings / totalPentestFindings) * 100
    );

    console.log('\n📈 ACCURACY METRICS:');
    console.log('─'.repeat(25));
    console.log(`🎯 Matched Findings: ${comparisonResults.matchedFindings}`);
    console.log(`➕ Extra Findings: ${comparisonResults.ourExtraFindings}`);
    console.log(`❌ Missed Findings: ${comparisonResults.missedFindings}`);
    console.log(`📊 Match Percentage: ${matchPercentage}%`);

    // OWASP coverage comparison
    console.log('\n🛡️  OWASP COVERAGE COMPARISON:');
    console.log('─'.repeat(30));
    console.log(`PentestTools: 1 category (A5 - Security Misconfiguration)`);
    console.log(`Our Scanner: ${ourOwaspCategories.size} categories`);
    if (ourOwaspCategories.size > 0) {
      console.log(`Our Categories: ${Array.from(ourOwaspCategories).join(', ')}`);
    }

    // Overall assessment
    console.log('\n🏆 OVERALL ASSESSMENT:');
    console.log('─'.repeat(25));
    
    let assessment = '';
    let score = 0;

    // Match accuracy (40% weight)
    if (matchPercentage >= 80) {
      score += 40;
      assessment += 'Excellent match accuracy. ';
    } else if (matchPercentage >= 60) {
      score += 30;
      assessment += 'Good match accuracy. ';
    } else {
      score += 20;
      assessment += 'Fair match accuracy. ';
    }

    // OWASP coverage (30% weight)
    if (ourOwaspCategories.size >= pentestToolsResults.owaspCategoryCoverage) {
      score += 30;
      assessment += 'Equal or better OWASP coverage. ';
    } else {
      score += 15;
      assessment += 'Lower OWASP coverage. ';
    }

    // Extra findings (30% weight)
    if (comparisonResults.ourExtraFindings > 0) {
      score += 30;
      assessment += 'Found additional security issues. ';
    } else {
      score += 20;
      assessment += 'Similar finding count. ';
    }

    console.log(`📊 Overall Score: ${score}/100`);
    console.log(`📝 Assessment: ${assessment}`);
    
    if (score >= 80) {
      console.log('🎉 EXCELLENT: Our scanner matches or exceeds PentestTools!');
    } else if (score >= 60) {
      console.log('✅ GOOD: Our scanner shows comparable accuracy!');
    } else {
      console.log('🔧 NEEDS IMPROVEMENT: Consider tuning detection algorithms.');
    }

    console.log('\n💡 KEY INSIGHTS:');
    console.log('─'.repeat(20));
    console.log('• Both scanners focus heavily on Security Misconfiguration (OWASP A5)');
    console.log('• Missing security headers are consistently detected by both');
    console.log('• Our scanner may have broader OWASP category coverage');
    console.log('• PentestTools uses a more conservative severity rating');
    console.log('• Both tools provide actionable security recommendations');

  } catch (error) {
    console.error(`❌ Our scanner failed: ${error.message}`);
    console.log('\n🔧 This indicates potential issues with:');
    console.log('• Network connectivity');
    console.log('• Error handling in our scanner');
    console.log('• Target website accessibility');
  }

  console.log('\n✅ Comparison completed!');
}

// Run the comparison
compareWithPentestTools().catch(console.error);
